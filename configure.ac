#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT([node], [0.3.0-pre], [ryan@joyent.com])

AC_CONFIG_SRCDIR([src/node.cc])

config_file=config.mak.autogen
config_append=config.mak.append
config_in=config.mak.in

echo "# ${config_append}.  Generated by configure." > "${config_append}"

#dnl Search for pkg-config
#AC_PATH_PROG(PKG_CONFIG, pkg-config)


# TODO support options
#  --efence              Build with -lefence for debugging [Default: False]
#  --without-snapshot    Build without snapshotting V8 libraries. You might want to set this for cross-compiling.
#                        [Default: False]
#  --without-ssl         Build without SSL
#  --shared-v8           Link to a shared V8 DLL instead of static linking
#  --shared-v8-includes=SHARED_V8_INCLUDES
#                        Directory containing V8 header files
#  --shared-v8-libpath=SHARED_V8_LIBPATH
#                        A directory to search for the shared V8 DLL
#  --shared-v8-libname=SHARED_V8_LIBNAME
#                        Alternative lib name to link to (default: 'v8')
#  --shared-cares        Link to a shared C-Ares DLL instead of static linking
#  --shared-cares-includes=SHARED_CARES_INCLUDES
#                        Directory containing C-Ares header files
#  --shared-cares-libpath=SHARED_CARES_LIBPATH
#                        A directory to search for the shared C-Ares DLL
#  --shared-libev        Link to a shared libev DLL instead of static linking
#  --shared-libev-includes=SHARED_LIBEV_INCLUDES
#                        Directory containing libev header files
#  --shared-libev-libpath=SHARED_LIBEV_LIBPATH
#                        A directory to search for the shared libev DLL

AC_CHECK_PROGS(TAR, [gtar tar])
AC_CHECK_TOOLS(AR, [gar ar], :)



# TODO: OpenSSL
AC_SUBST([HAVE_OPENSSL],[1])




m4_include([deps/libev/libev.m4])
m4_include([deps/libeio/libeio.m4])

mkdir -p build/deps/libev/
mkdir -p build/deps/libeio/
AC_CONFIG_HEADERS([build/deps/libev/config.h:deps/libev/config.h.in])
AC_CONFIG_HEADERS([build/deps/libeio/config.h:deps/libeio/config.h.in])

AC_CONFIG_FILES(["${config_file}":"${config_in}"])

## Output files
AC_OUTPUT


## Cleanup
rm -f "${config_append}"
